import "./globals.css";
import type { Metadata } from "next";
import { Rubik } from "next/font/google";
import Navbar from "../components/Navbar/Navbar";
import { FC } from "react";
import { CartType } from "@/types/Cart";
import { kv } from "@vercel/kv";

const rubik = Rubik({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",

// };

interface Props {
  children: React.ReactNode;
}

const readClientCartId = async (cartId: number) => {
  "use server";

  if (cartId === 0) {
    const id = await kv.incr("cartId");
    await kv.set<CartType>(`cart-${id}`, {
      id,
      items: [],
    });
    const newCart = await kv.get<CartType>(`cart-${id}`);
    return newCart!;
  } else {
    await kv.get<CartType>(`cart-${cartId}`);
    const cart = await kv.get<CartType>(`cart-${cartId}`);
    return cart!;
  }
};

const RootLayout:FC<Props> = async(props)=> {
  return (
    <html lang="en">
      <body className={rubik.className}>
        <Navbar readClientCartId={readClientCartId}/>
        {props.children}
      </body>
    </html>
  );
}

export default RootLayout;
